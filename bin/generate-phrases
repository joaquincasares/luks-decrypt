#!/usr/bin/env python3

from itertools import product
import sys

def generate_permutations(lists):
    # Generate all combinations using product
    all_combinations = product(*lists)

    # Filter out combinations with repeated elements
    unique_combinations = [''.join(combo) for combo in all_combinations if len(set(combo)) == len(combo)]

    return unique_combinations

def read_input_file(file_path):
    with open(file_path, "r") as file:
        lines = file.readlines()
        lists = [line.strip().split(",") for line in lines]
    # Transpose and filter the lists
    transposed = list(map(list, zip(*lists)))
    filtered = [[item for item in sublist if item] for sublist in transposed]
    return filtered

def write_output_file(output_path, permutations):
    with open(output_path, "w") as file:
        for p in permutations:
            file.write(p + "\n")

# Main script
if __name__ == "__main__":
    input_file_path = 'phrase.txt'
    output_file_path = 'phrases.txt'

    lists = read_input_file(input_file_path)
    permutations = generate_permutations(lists)
    write_output_file(output_file_path, permutations)
