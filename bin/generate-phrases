#!/usr/bin/env python3

from itertools import product
import sys

def generate_permutations(lists):
    # Generate all combinations using product
    all_combinations = product(*lists)

    # Filter out combinations with repeated elements
    unique_combinations = [''.join(combo) for combo in all_combinations if len(set(combo)) == len(combo)]

    return unique_combinations

def read_input_file(file_path):
    with open(file_path, "r") as file:
        # Split the file content into sections separated by "===" and strip empty lines
        sections = file.read().strip().split("===\n")
        # Split each section into lines and form a list of lists
        lists = []
        for section in sections:
            if section.endswith("\n"):
                section = section[:-1]
            lists.append(section.split("\n"))
    return lists

def write_output_file(output_path, permutations):
    with open(output_path, "w") as file:
        for permutation in permutations:
            file.write(permutation + "\n")

# Main script
if __name__ == "__main__":
    input_file_path = 'phrase.txt'
    output_file_path = 'phrases.txt'

    lists = read_input_file(input_file_path)
    permutations = generate_permutations(lists)
    write_output_file(output_file_path, permutations)
