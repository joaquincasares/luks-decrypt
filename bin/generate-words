#!/usr/bin/env python3

from itertools import product
import sys

def unique_permutations(word, substitutions):
    # Find all unique characters in the word that have substitutions
    unique_chars = set([find for find, _ in substitutions if find in word])
    
    # Create a list of possible substitutions for each character in the word
    substitution_options = [(c, [c] + [replace for find, replace in substitutions if find == c]) for c in word]

    # Generate all combinations of substitutions
    all_combinations = product(*[options for _, options in substitution_options])

    # Apply each combination to the word
    unique_results = set()
    for combination in all_combinations:
        permuted_word = ''.join(combination)
        unique_results.add(permuted_word)

    return sorted(unique_results)

def read_file_and_parse_lists(input_file_path):
    with open(input_file_path, "r") as file:
        lines = [line.strip().split(",") for line in file]
    return lines[0][0], lines[1:]


def write_output_file(output_path, permutations):
    with open(output_path, "w") as file:
        for p in permutations:
            file.write(p + "\n")

if __name__ == "__main__":
    if len(sys.argv) < 2:
        print(f"Usage: {sys.argv[0]} <input_file_path>")
        sys.exit(1)

    input_file_path = sys.argv[1]
    output_file_path = input_file_path.replace("word", "words")
    word, substitutions = read_file_and_parse_lists(input_file_path)
    permutations = unique_permutations(word, substitutions)

    write_output_file(output_file_path, permutations)
